Мы решаем задачу классификации. У нас есть типы фотографий, на которых "степлер", на которых "купюра", на которых "карабин", и на которых все остальные предметы(trash). Папки hryvnia, stepler, karabin, trash содержат фотографии соответствующих классов.

Изображения достаточно большие по размеру, и их небольшое количество (~100 на каждый класс). Их нельзя просто так подать в классификатор, нужно упростить их представление.

Ниже описана последовательность по запуску:

Файлы orb_extractor.ipynb, brisk_extractor.ipynb, sift_extractor.ipynb делают одинаковую последовательность действий:
- загружают все изображения
- получают дескриптор для каждой картинки. дескриптором картинки служат набор np.array (n,32) (для ORB), (n,64) (для SIFT), (n,128) для BRISK. Число n является разным для каждой картинки( в зависимости от освещения, качества фото,  количество ключевых характеристик меняется.)
- проводим кластеризацию пространства 32-мерных векторов методом k-means. Число кластеров 10*4, где 4-количество классов.
- теперь каждому 32-мерному вектору соответствует номер кластера. По каждому изображению формируем вектор размера 10*4, который будет хранить количества 32-мерных векторов, попавших в каждый кластер(считаем частоты попадания в каждый кластер). Имеем датасет, в котором 40 признаков для каждой картинки.
- сохраняем обученный k_means, он нам дальше понадобится при формировании предсказаний. Сохраняем датасеты brisk_dataset, orb_dataset, sift_dataset.

Файл classificator работает с датасетами brisk_dataset, orb_dataset, sift_dataset, сформированными на предыдущем шаге.
- подгружаем уже упрощенные представления картинок(датасеты).
- проводим разбиение на обучающую и тестовую выборку.
- демонстрируем работу комбинации декскриптор+классификатор. Печатаем качество на тестовой выборке, сравниваем классификаторы.
- сохраняем обученные классификаторы(их получится 3*3=9).

Файл video_classifying демонстрирует работу классификаторов на видео.
- импортируем kmeans и классификаторы из предыдущих шагов.
- собираем всю предобработку изображения в одну функцию(preprocess_image)
- подгружаем видео, достаем из него кадры, делаем предсказания классификаторами. Наслаждаемся.


Ссылка на протокол 
https://docs.google.com/document/d/1seCMi_aEAMIOHwZS98nrGIUxutnmpEbYk-RB4FoBAa4/edit
